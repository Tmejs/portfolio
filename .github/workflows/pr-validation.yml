name: PR Validation - All Services

on:
  pull_request:
    branches: [ main, develop ]

env:
  JAVA_VERSION: '21'
  MAVEN_OPTS: '-Xmx1024m'

jobs:
  changes:
    name: Detect Service Changes
    runs-on: ubuntu-latest
    outputs:
      banking-service: ${{ steps.changes.outputs.banking-service }}
      analytics-service: ${{ steps.changes.outputs.analytics-service }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            banking-service:
              - 'spring-boot-microservices-demo/**'
              - '.github/workflows/ci-cd.yml'
            analytics-service:
              - 'account-analytics-service/**'
              - '.github/workflows/account-analytics-service.yml'

  validate-banking:
    name: Validate Banking Service
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.banking-service == 'true'
    name: Quick Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Validate Maven setup
      working-directory: ./spring-boot-microservices-demo
      run: mvn validate
      
    - name: Check code formatting (optional)
      working-directory: ./spring-boot-microservices-demo
      run: |
        mvn spotless:check || echo "Code formatting check completed"
      continue-on-error: true
      
    - name: Compile and run quick tests
      working-directory: ./spring-boot-microservices-demo
      run: |
        mvn clean compile test-compile
        mvn test -Dtest='!**/*IT' -DfailIfNoTests=false
        
    - name: Run basic integration test
      working-directory: ./spring-boot-microservices-demo
      run: |
        timeout 300 mvn test -Dtest='**/AccountRepositoryIT' || echo "Quick integration test completed"
      continue-on-error: true

  validate-analytics:
    name: Validate Analytics Service
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.analytics-service == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-analytics-${{ hashFiles('account-analytics-service/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-analytics-
          ${{ runner.os }}-m2-
        
    - name: Validate Maven setup
      working-directory: ./account-analytics-service
      run: mvn validate
      
    - name: Compile and run quick tests
      working-directory: ./account-analytics-service
      run: |
        mvn clean compile test-compile
        mvn test -Dtest='!**/*IT' -DfailIfNoTests=false
        
    - name: Run quick Redis integration test
      working-directory: ./account-analytics-service
      run: |
        timeout 300 mvn test -Dtest='**/RedisIT#shouldSaveAndRetrieveUserPreferences' || echo "Quick Redis test completed"
      continue-on-error: true
      
  comment-pr:
    name: Comment PR Results
    runs-on: ubuntu-latest
    needs: [changes, validate-banking, validate-analytics]
    if: always() && github.event_name == 'pull_request'
    
    steps:
    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          const bankingChanged = '${{ needs.changes.outputs.banking-service }}' === 'true';
          const analyticsChanged = '${{ needs.changes.outputs.analytics-service }}' === 'true';
          const bankingResult = '${{ needs.validate-banking.result }}';
          const analyticsResult = '${{ needs.validate-analytics.result }}';
          
          let message = '## üìù PR Validation Results\n\n';
          
          if (bankingChanged) {
            const bankingIcon = bankingResult === 'success' ? '‚úÖ' : '‚ùå';
            message += `${bankingIcon} **Banking Service**: ${bankingResult}\n`;
          }
          
          if (analyticsChanged) {
            const analyticsIcon = analyticsResult === 'success' ? '‚úÖ' : '‚ùå';
            message += `${analyticsIcon} **Analytics Service**: ${analyticsResult}\n`;
          }
          
          if (!bankingChanged && !analyticsChanged) {
            message += 'üîç No service changes detected in this PR.\n';
          }
          
          message += '\nüöÄ The full CI/CD pipeline will run once this PR is merged.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });
