# Default values for banking-microservice.
replicaCount: 1

image:
  repository: banking-microservice
  pullPolicy: IfNotPresent
  tag: "1.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: banking-microservice.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Spring Boot application configuration
app:
  profile: "dev"
  jvm:
    heapSize: "512m"
    options: "-XX:+UseG1GC -XX:+UseContainerSupport"

# Database configuration
database:
  # Use external secrets for database credentials
  secretName: "banking-db-secret"
  host: ""
  port: 5432
  name: "portfolio_banking"
  schema: "banking"

# Redis configuration
redis:
  host: ""
  port: 6379
  timeout: 2000

# Kafka configuration
kafka:
  bootstrapServers: ""
  consumerGroupId: "banking-service"

# Health checks
healthCheck:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessCheck:
  enabled: true
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

# Metrics and monitoring
metrics:
  enabled: true
  port: 8080
  path: "/actuator/prometheus"

# External secrets configuration
externalSecrets:
  enabled: true
  secretStore:
    name: "aws-secrets-manager"
    kind: "SecretStore"
  refreshInterval: "1h"
  
# Environment-specific overrides
environments:
  dev:
    replicaCount: 1
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
  
  prod:
    replicaCount: 3
    resources:
      limits:
        cpu: 2000m
        memory: 2Gi
      requests:
        cpu: 1000m
        memory: 1Gi
    autoscaling:
      enabled: true
      minReplicas: 3
      maxReplicas: 10
